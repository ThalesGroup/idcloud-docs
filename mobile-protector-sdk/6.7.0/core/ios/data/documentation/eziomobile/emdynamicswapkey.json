{"abstract":[{"text":"Gets the ObjC method list hook detection status.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ObjC hook detection has the following limitations:"},{"type":"text","text":" "},{"type":"text","text":"It should not be used to protect System APIs e.g. NSString, NSURL"},{"type":"text","text":" "},{"type":"text","text":"It should not be used to protect APIs in ObjC categories."},{"type":"text","text":" "},{"text":"It should not be used to protect methods overridden from NSObject e.g. init, description.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Method swizzling is not allowed on protected API."},{"text":" ","type":"text"},{"type":"text","text":"For Swift, this function only protect the Swift class derived from ObjC class."}],"primaryContentSections":[{"declarations":[{"languages":["occ"],"tokens":[{"text":"int","preciseIdentifier":"c:I","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"EMDynamicSwapKey","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:I","text":"int","kind":"typeIdentifier"},{"kind":"text","text":" * "},{"text":"result","kind":"internalParam"},{"kind":"text","text":", "},{"preciseIdentifier":"c:@T@Class","text":"Class","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"clazz","kind":"internalParam"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@size_t","text":"size_t"},{"kind":"text","text":" "},{"kind":"internalParam","text":"selSize"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@SEL","text":"SEL"},{"text":" ","kind":"text"},{"text":"sel","kind":"internalParam"},{"text":", ...);","kind":"text"}],"platforms":["iOS"]}],"kind":"declarations"},{"parameters":[{"name":"result","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"[Out] The hook detection result. EM_DETECTOR_RESULT_POSITIVE if itâ€™s hooked, otherwise EM_DETECTOR_RESULT_NEGATIVE."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"[In] The class to be checked."}]}],"name":"clazz"},{"content":[{"type":"paragraph","inlineContent":[{"text":"[In] The count of selectors(methods) passed in the sel arguments.","type":"text"}]}],"name":"selSize"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"[In] (Optional) The selector."}]}],"name":"sel"}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The hook detection status: EM_DETECTOR_STATUS_SUCCESS, EM_DETECTOR_STATUS_FAILED and EM_DETECTOR_STATUS_INVALID_ARGUMENTS for invalid"}]},{"items":[{"content":[{"inlineContent":[{"text":"Since: 5.4","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.thalesgroup.oip.idp\/documentation\/EzioMobile"]]},"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/com.thalesgroup.oip.idp\/documentation\/EzioMobile\/EMDynamicSwapKey"},"metadata":{"roleHeading":"Function","externalID":"c:@F@EMDynamicSwapKey","role":"symbol","modules":[{"name":"EzioMobile"}],"symbolKind":"func","navigatorTitle":[{"kind":"identifier","text":"EMDynamicSwapKey"}],"fragments":[{"text":"EMDynamicSwapKey","kind":"identifier"}],"title":"EMDynamicSwapKey"},"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/eziomobile\/emdynamicswapkey"]}],"references":{"doc://com.thalesgroup.oip.idp/documentation/EzioMobile":{"kind":"symbol","identifier":"doc:\/\/com.thalesgroup.oip.idp\/documentation\/EzioMobile","role":"collection","abstract":[],"url":"\/documentation\/eziomobile","title":"EzioMobile","type":"topic"},"doc://com.thalesgroup.oip.idp/documentation/EzioMobile/EMDynamicSwapKey":{"role":"symbol","identifier":"doc:\/\/com.thalesgroup.oip.idp\/documentation\/EzioMobile\/EMDynamicSwapKey","fragments":[{"text":"EMDynamicSwapKey","kind":"identifier"}],"abstract":[{"text":"Gets the ObjC method list hook detection status.","type":"text"},{"text":" ","type":"text"},{"text":"ObjC hook detection has the following limitations:","type":"text"},{"text":" ","type":"text"},{"text":"It should not be used to protect System APIs e.g. NSString, NSURL","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It should not be used to protect APIs in ObjC categories."},{"type":"text","text":" "},{"text":"It should not be used to protect methods overridden from NSObject e.g. init, description.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Method swizzling is not allowed on protected API."},{"type":"text","text":" "},{"type":"text","text":"For Swift, this function only protect the Swift class derived from ObjC class."}],"kind":"symbol","type":"topic","title":"EMDynamicSwapKey","url":"\/documentation\/eziomobile\/emdynamicswapkey"}}}